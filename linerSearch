#include <iostream>
using namespace std;

int search(int A[], n, int key) 
{
  for ( int i = 0; i < n; i++) {
      if ( A[i] == key ) 
         return i;
  }
  return -1;
}
classs Shape
{
protected:
  float length;
  float breadth;
public:
  Shape(float x, float y) {
    length = x;
    breadth = y;
  }
  ~Shape();
  virtual float area() = 0;
  virtual float perimeter() = 0;
  virtual float diagonal() = 0;
}  
  
class Rectangle : public Shape
{
public:
  Rectangle(float x, float y) : Shape(x, y)
  {
  }
  ~Rectangle();
  float area() { return length * breadth;}
  float perimeter(){ return 2 * (length + breadth); }
  float diagonal() { return sqrt(length * length + breadth * breadth);}
};
class Triangle : public Shape
{
public:
  Triangle(float x, float y) : Shape(x, y)
  {}
  ~Triangle();
  float area() { return length * breadth / 2; }
};

int main()
{
  int A[] = {2, 4, 6, 8, 10};
  int x;
  cout <<"Enter a key ";
  cin >> x ;
  int index = search(A, 5, x);
  if ( index > 0 ) {
    cout << "Element is found at the index " << index << endl;
  }
  Rectange r1, r2;
  r1.length = 10;
  r1.breadth = 5;
  cout << r1.area() << endl;
  r2.length = 5;
  r2.breadth = 10;
  cout << r2.perimeter << endl;
  return 0;
}
